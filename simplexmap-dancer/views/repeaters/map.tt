<div class="row">
    <div class="col-md-12" role="main">
      <div class="panel panel-default">
        <div class="panel-heading">
          <p>Repeater Map
          </p>
        </div>
        <div class="panel-body">
          <div id="map" class="map" style="height: 600px;">
          </div>
		  <p><em>Click on an item to show signal paths to it.</em></p>
        </div>
      </div>
	</div>
</div>
</div>
		<script>
		 $(document).ready(function() {

		   var currentLine;

		   var defaultLat = 38.55;
		   var defaultLon = -121.7;

		   var repeaters = <% repeaters %>
		   var stations = <% stations %>
		   var links = <% links %>

		   // create the map 
		   var map = L.map('map', {
			 center: [defaultLat, defaultLon],
			 zoom:   10,
		   });

		   // add the base map
		   L.tileLayer('http://a.tiles.mapbox.com/v3/hardaker.kc8b5joe/{z}/{x}/{y}.png', {
			 attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
			 maxZoom: 18
		   }).addTo(map);

		   var iconBaseSize = 24;
		   var iconHomeSize = iconBaseSize/2;

		   // create the icons
		   var homeIcon = L.icon({
			 iconUrl: '/icons/building-24@2x.png',
			 iconSize:   [iconHomeSize,   iconHomeSize],
			 iconAnchor: [iconHomeSize/2, iconHomeSize/2],
			 popupAnchor: [iconHomeSize/2, -100],
		   });

		   var repeaterIcon = L.icon({
			 iconUrl: '/icons/triangle-24@2x.png',
			 iconSize:   [iconSize,   iconSize],
			 iconAnchor: [iconSize/2, iconSize],
			 popupAnchor: [iconSize/2, -100],
		   });
		   
		   // setup the repeater grouping
		   var repeaterLayerObjs = [];
		   var repeaterLines = [];
		   for (repeater in repeaters) {
			 if (repeaters.hasOwnProperty(repeater)) {
			   var repeatMark = 
				 L.marker([parseFloat(repeaters[repeater]['repeaterlat']),
						   parseFloat(repeaters[repeater]['repeaterlon'])],
						  {title: repeaters[repeater]['repeatercallsign'],
						   icon: repeaterIcon});

			   repeaterLayerObjs[repeaterLayerObjs.length] = repeatMark;

			   repeaters[repeater]['lines'] = [];
			   repeaters[repeater]['mark'] = repeatMark;
			   repeatMark['ws6z_lines'] = [];
			   repeatMark['ws6z_shown'] = false;
			   repeatMark.on('click', onMarkerClick);
			 }
		   }			 
		   var repeaterGroup = L.layerGroup(repeaterLayerObjs);
		   repeaterGroup.addTo(map);

		   // set up the station grouping
		   var stationLayerObjs = [];
		   var stationLines = [];
		   for (station in stations) {
			 if (stations.hasOwnProperty(station)) {
			   var stationMark = 
			   L.marker([parseFloat(stations[station]['locationlat']),
						 parseFloat(stations[station]['locationlon'])],
						{title: stations[station]['callsign'] + ": " + stations[station]['locationname'],
						 icon: homeIcon}).addTo(map)
			   stationLayerObjs[stationLayerObjs.length] = stationMark;

			   stations[station]['lines'] = [];
			   stations[station]['mark'] = stationMark;
			   stationMark['ws6z_lines'] = [];
			   stationMark['ws6z_shown'] = false;
			   stationMark.on('click', onMarkerClick);
			 }
		   }
		   var stationGroup = L.layerGroup(stationLayerObjs);
		   stationGroup.addTo(map);

		   // add the links between the various objects
		   for (linkid in links) {
			 var link = links[linkid];
			 var line = L.polyline([[parseFloat(link['repeaterlat']), parseFloat(link['repeaterlon'])],
									[parseFloat(link['locationlat']), parseFloat(link['locationlon'])]]);

			 
			 stations[link['listeningStation']]['lines'][stations[link['listeningStation']]['lines'].length] = line;
			 stations[link['listeningStation']]['mark']['ws6z_lines'][stations[link['listeningStation']]['mark']['ws6z_lines'].length] = line;

			 repeaters[link['repeaterid']]['lines'][repeaters[link['repeaterid']]['lines'].length] = line;

			 repeaters[link['repeaterid']]['mark']['ws6z_lines'][repeaters[link['repeaterid']]['mark']['ws6z_lines'].length] = line;
		   }

		   L.control.layers(null,  { 'Repeaters': repeaterGroup,
									 'Stations':  stationGroup} ).addTo(map);


		   function onMarkerClick(e) {
			 // 'this' should be a marker
			 var lines = this.ws6z_lines;
			 var shown = this.ws6z_shown;
			 
			 for (line in lines) {
			   //lines[line].hide();
			   if (shown) {
				 map.removeLayer(lines[line]);
			   } else {
				 map.addLayer(lines[line]);
			   }
			 }
			 this.ws6z_shown = !shown;
		   }

});
		</script>
